<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/data/jpa 
    	http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
    	http://www.springframework.org/schema/security
    	http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<context:component-scan base-package="com.softech.elearning" />

	<!-- bind your messages.properties -->
	<!-- <beans:bean class="org.springframework.context.support.ResourceBundleMessageSource" 
		id="messageSource"> <beans:property name="basename" value="messages" /> </beans:bean> -->

	<!-- Read the property values from application.properties -->
	<!-- <context:property-placeholder location="classpath:hibernate.properties" 
		/> -->

	<beans:bean id="hibernateJpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />

	<!-- <beans:bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> 
		<beans:property name="dataSource" ref="dataSource" /> <beans:property name="jpaVendorAdapter" 
		ref="hibernateJpaVendorAdapter" /> Set the base package of your model classes 
		<beans:property name="persistenceUnitName" value="comicpersistence" /> <beans:property 
		name="packagesToScan" value="com.softech.comicproject.data.domain" /> <beans:property 
		name="jpaProperties"> <beans:props> <beans:prop key="">${hibernate.dialect}</beans:prop> 
		<beans:prop key="hibernate.dialect">${hibernate.dialect}</beans:prop> <beans:prop 
		key="hibernate.ejb.naming_strategy">${hibernate.ejb.naming_strategy} </beans:prop> 
		<beans:prop key="hibernate.format_sql">${hibernate.format_sql}</beans:prop> 
		<beans:prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</beans:prop> 
		<beans:prop key="hibernate.show_sql">${hibernate.show_sql}</beans:prop> </beans:props> 
		</beans:property> </beans:bean> -->

	<!-- Configure the transaction manager bean -->
	<!-- <beans:bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"> 
		<beans:property name="entityManagerFactory" ref="entityManagerFactory" /> 
		</beans:bean> -->

	<!-- <jpa:repositories base-package="com.softech.comicproject.data.service" 
		/> -->

	<beans:bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/tiles.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass">
			<beans:value>
				org.springframework.web.servlet.view.tiles3.TilesView
			</beans:value>
		</beans:property>
		<beans:property name="contentType" value="text/html;charset=UTF-8" />
	</beans:bean>

	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- Maximum file size: 1MB 1MB = 125000 Byte -->
		<beans:property name="maxUploadSize" value="125000" />
	</beans:bean>

</beans:beans>
